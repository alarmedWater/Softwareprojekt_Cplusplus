run with make: make run
compile with make: make 
clean with make: make clean 


to do: 
Import SFML in eigenem Ordnern in assets/lib/SFML

Arbeitsteilung: 
Cenk: 
    Level grundlagen 
    Collactable items, wie coins oder sowas

Julian 
    Player
        update: Player ist Klotz, kann springen und laufen, geschwindigkeiten und gravtiy feinustieren 
    Enemy 
        update: nicht angefangen 

Alle: 
    Wie Steuerung mit sensoren. zb Plattform bewegen mit ultraschall sensor usw...


Folder Struktur Idee: 
Explanation of the folders:

    assets/: This folder contains all the game assets such as textures, fonts, sounds, and level data.
        textures/: Contains image files used in the game (e.g., sprites for the player, enemies, and environment).
        fonts/: Contains font files for any text rendering in the game.
        sounds/: Contains audio files for music and sound effects.
        levels/: Contains level data, possibly in a simple text or custom format.

    src/: This folder contains all the source code files.
        main.cpp: The entry point of the game.
        Game.cpp and Game.h: Classes to handle the main game loop, rendering, and updating.
        Player.cpp and Player.h: Player character implementation.
        Enemy.cpp and Enemy.h: Enemy character implementation.
        Level.cpp and Level.h: Handling level loading and management.
        ResourceManager.cpp and ResourceManager.h: For managing and caching assets (textures, sounds, etc.).

    lib/: Contains third-party libraries. SFML can be placed here if you're not installing it system-wide.

    CMakeLists.txt: If you're using CMake as your build system, this file will define how your project is built.

    README.md: A markdown file to explain your project, how to build and run it, dependencies, etc.